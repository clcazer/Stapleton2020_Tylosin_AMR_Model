[1] "TYL_NI, median. Min, max over time and end of simulation"
[1] 0.0497
[1] 0.08
[1] 0.0786
[1] "TYL_NI, 5th percentile. Min, max over time and end of simulation"
[1] 0.0016
[1] 0.0022
[1] 0.0016
[1] "TYL_NI, 95th percentile. Min, max over time and end of simulation"
[1] 0.463
[1] 0.9919
[1] 0.9919
[1] ""
[1] "change over time in TYL_NI simulations"
[1] "% with decrease"
[1] 0.377
[1] "maximum decrease"
[1] -0.1538
[1] "% with increase"
[1] 0.623
[1] "% with minimal increase"
[1] 0.317
[1] "% with moderate increases"
[1] 0.165
[1] "% with substantial increase"
[1] 0.141
[1] ""
[1] "CON NI change over time"
[1] "% with decrease"
[1] 0.812
[1] "maximum decrease"
[1] -0.2072
[1] "% with minimal increase"
[1] 0.087
[1] "% with moderate increases"
[1] 0.057
[1] "% with substantial increase"
[1] 0.044
[1] ""
[1] "difference between TYL and CON at the end of the feeding period"
[1] "% with decrease"
[1] 0.048
[1] "largest decrease"
[1] 0
[1] "the largest decrease is 0 percentage points. so 5% of simulations had no difference between TYL and CON"
[1] "% with minimal increase"
[1] 0.707
[1] "% with minimal increase or decrease"
[1] 0.755
[1] "% with moderate increase"
[1] 0.159
[1] "% with substantial increase"
[1] 0.086
[1] "median difference"
        50%
3433 0.0125
[1] ""
[1] "difference between TYL and CON at the end of the feeding period for different interventions"
[1] "RWT"
[1] "% with minimal increase or decrease"
[1] 0.791
[1] "% with moderate increase"
[1] 0.14
[1] "% with substantial increase"
[1] 0.069
[1] "DFM"
[1] "% with minimal increase or decrease"
[1] 0.752
[1] "% with moderate increase"
[1] 0.162
[1] "% with substantial increase"
[1] 0.086
[1] "AFTP"
[1] "% with minimal increase or decrease"
[1] 0.809
[1] "% with moderate increase"
[1] 0.144
[1] "% with substantial increase"
[1] 0.047
[1] ""
[1] "time and magnitude of intervention impact in TYL effect"
[1] "AFTP"
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 7 x 9
  variable     d113      max     min    d143 day.max day.min d143.reduction lrgst.reduction
  <fct>       <dbl>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>          <dbl>           <dbl>
1 X1.      0        0        0       0          113     113        0               0       
2 X5.      0.000100 0.000100 0       0          113.    113.       0.000100        0.000100
3 X25.     0.00210  0.00210  0.00120 0.00120    113     139        0.000900        0.000900
4 X50.     0.0115   0.0115   0.00760 0.0076     113     142.       0.00385         0.00385 
5 X75.     0.0816   0.0816   0.0548  0.0548     113     143.       0.0268          0.0268  
6 X95.     0.650    0.650    0.486   0.486      113     143.       0.164           0.164   
7 X99.     0.947    0.947    0.802   0.802      113     143.       0.146           0.146   
[1] "RWT"
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 7 x 9
  variable     d113      max     min    d143 day.max day.min d143.reduction lrgst.reduction
  <fct>       <dbl>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>          <dbl>           <dbl>
1 X1.      0        0        0       0          113     113        0               0       
2 X5.      0.000100 0.000100 0       0          115.    118.       0.000100        0.000100
3 X25.     0.00210  0.00210  0.00160 0.00160    114.    143.       0.000500        0.0005  
4 X50.     0.0115   0.0115   0.0100  0.0100     114.    143.       0.0014          0.0014  
5 X75.     0.0816   0.0820   0.0672  0.0672     114.    143.       0.0143          0.0144  
6 X95.     0.650    0.653    0.601   0.601      114.    143.       0.0486          0.0486  
7 X99.     0.947    0.948    0.923   0.923      114.    143.       0.0243          0.0243  
[1] ""
[1] "DFM vs NI. They are essentially the same for proportion resistant"
[1] "DFM"
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 7 x 2
  variable        v
  <fct>       <dbl>
1 X1.      0       
2 X5.      0.000100
3 X25.     0.00210 
4 X50.     0.0124  
5 X75.     0.0973  
6 X95.     0.732   
7 X99.     0.964   
[1] "NI"
`summarise()` ungrouping output (override with `.groups` argument)
# A tibble: 7 x 2
  variable        v
  <fct>       <dbl>
1 X1.      0       
2 X5.      0.000100
3 X25.     0.00207 
4 X50.     0.0125  
5 X75.     0.0935  
6 X95.     0.734   
7 X99.     0.962   
